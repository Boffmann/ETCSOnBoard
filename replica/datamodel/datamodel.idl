module RevPiDDS {

  struct Input {
    long id;
    sequence<long> data;
  };
  #pragma keylist Input id
  
  // TODO id could be key
  struct AppendEntries {
    long term;
    long senderID;
    long inputID;
    sequence<long> entries;
  };
  #pragma keylist AppendEntries term

  struct AppendEntriesReply {
    long senderID;
    long id;
    long term;
    boolean success;
    boolean should_brake;
    long reason;
  };
  #pragma keylist AppendEntriesReply

  struct RequestVote {
    long term;
    long senderID;
  };
  #pragma keylist RequestVote

  struct RequestVoteReply {
    long senderID;
    long term;
    long candidateID;
    boolean voteGranted;
  };
  #pragma keylist RequestVoteReply

  struct ReplicaResult {
    long senderID;
    long temp;
  };
  #pragma keylist ReplicaResult

  struct ActivateSpare {
    long term;
    boolean activate;
  };
  #pragma keylist ActivateSpare

  struct LinkedBalises {
    short ID;
    long position;
  };
  #pragma keylist LinkedBalises ID

  struct TrainState {
    double position;
    double max_position;
    double min_position;
    float speed;
    boolean is_driving;
    unsigned long long lastUpdateTime;
  };
  #pragma keylist TrainState

  struct MovementAuthority {
    long start_position;
    long end_position;
  };
  #pragma keylist MovementAuthority

};
